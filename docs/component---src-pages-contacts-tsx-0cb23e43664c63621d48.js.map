{"version":3,"file":"component---src-pages-contacts-tsx-0cb23e43664c63621d48.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/icons/arrow-left.js","webpack://my-gatsby-site/./src/components/nav.tsx","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-motion-template.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://my-gatsby-site/./src/components/card.tsx","webpack://my-gatsby-site/./src/pages/contacts.tsx","webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/icons/github.js","webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/icons/mail.js","webpack://my-gatsby-site/./node_modules/lucide-react/dist/esm/icons/twitter.js"],"sourcesContent":["/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n]);\n\nexport { ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","\"use client\";\nimport { ArrowLeft } from \"lucide-react\";\n// import Link from \"next/link\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport const Navigation: React.FC = () => {\n  const ref = useRef<HTMLElement>(null);\n  const [isIntersecting, setIntersecting] = useState(true);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const observer = new IntersectionObserver(([entry]) =>\n      setIntersecting(entry.isIntersecting)\n    );\n\n    observer.observe(ref.current);\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <header ref={ref}>\n      <div\n        className={`fixed inset-x-0 top-0 z-50 backdrop-blur  duration-200 border-b  ${\n          isIntersecting\n            ? \"bg-zinc-900/0 border-transparent\"\n            : \"bg-zinc-900/500  border-zinc-800 \"\n        }`}\n      >\n        <div className=\"container flex flex-row-reverse items-center justify-between p-6 mx-auto\">\n          <div className=\"flex justify-between gap-8\">\n            <a\n              href=\"/projects\"\n              className=\"duration-200 text-zinc-400 hover:text-zinc-100\"\n            >\n              Projects\n            </a>\n            <a\n              href=\"/contact\"\n              className=\"duration-200 text-zinc-400 hover:text-zinc-100\"\n            >\n              Contact\n            </a>\n          </div>\n\n          <a\n            href=\"/\"\n            className=\"duration-200 text-zinc-300 hover:text-zinc-100\"\n          >\n            <ArrowLeft className=\"w-6 h-6 \" />\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/js/index.mjs';\nimport { millisecondsToSeconds } from '../utils/time-conversion.mjs';\nimport { frameData } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            /**\n             * If we're between frames, resync the animation to the frameloop.\n             */\n            if (!frameData.isProcessing) {\n                const delta = performance.now() - frameData.timestamp;\n                if (delta < 30) {\n                    activeSpringAnimation.current.time =\n                        millisecondsToSeconds(delta);\n                }\n            }\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","import { useCombineMotionValues } from './use-combine-values.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value) {\n                output += isMotionValue(value) ? value.get() : value;\n            }\n        }\n        return output;\n    }\n    return useCombineMotionValues(values.filter(isMotionValue), buildValue);\n}\n\nexport { useMotionTemplate };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","\"use client\";\n\nimport {\n  motion,\n  useMotionTemplate,\n  useMotionValue,\n  useSpring,\n} from \"framer-motion\";\n\nimport React, { MouseEventHandler, PropsWithChildren } from \"react\";\n\nexport const Card: React.FC<PropsWithChildren> = ({ children }) => {\n  const mouseX = useSpring(0, { stiffness: 500, damping: 100 });\n  const mouseY = useSpring(0, { stiffness: 500, damping: 100 });\n\n  function onMouseMove({ currentTarget, clientX, clientY }: any) {\n    const { left, top } = currentTarget.getBoundingClientRect();\n    mouseX.set(clientX - left);\n    mouseY.set(clientY - top);\n  }\n  const maskImage = useMotionTemplate`radial-gradient(240px at ${mouseX}px ${mouseY}px, white, transparent)`;\n  const style = { maskImage, WebkitMaskImage: maskImage };\n\n  return (\n    <div\n      onMouseMove={onMouseMove}\n      className=\"overflow-hidden relative duration-700 border rounded-xl hover:bg-zinc-800/10 group md:gap-8 hover:border-zinc-400/50 border-zinc-600 \"\n    >\n      <div className=\"pointer-events-none\">\n        <div className=\"absolute inset-0 z-0  transition duration-1000 [mask-image:linear-gradient(black,transparent)]\" />\n        <motion.div\n          className=\"absolute inset-0 z-10  bg-gradient-to-br opacity-100  via-zinc-100/10  transition duration-1000 group-hover:opacity-50 \"\n          style={style}\n        />\n        <motion.div\n          className=\"absolute inset-0 z-10 opacity-0 mix-blend-overlay transition duration-1000 group-hover:opacity-100\"\n          style={style}\n        />\n      </div>\n\n      {children}\n    </div>\n  );\n};\n","\"use client\";\n\nimport React from \"react\";\n\nimport { Github, Mail, Twitter } from \"lucide-react\";\nimport { Navigation } from \"../components/nav\";\nimport { Card } from \"../components/card\";\n\nconst socials = [\n  {\n    icon: <Twitter size={20} />,\n    href: \"https://twitter.com/allthingstensor\",\n    label: \"Twitter\",\n    handle: \"@allthingstensor\",\n  },\n  {\n    icon: <Mail size={20} />,\n    href: \"mailto:praneshmukherjee7@gmail.com\",\n    label: \"Email\",\n    handle: \"praneshmukherjee7@gmail.com\",\n  },\n  {\n    icon: <Github size={20} />,\n    href: \"https://github.com/Mukhopadhyay\",\n    label: \"Github\",\n    handle: \"Mukhopadhyay\",\n  },\n];\n\nexport default function Example() {\n  return (\n    <div className=\" bg-gradient-to-tl from-black via-zinc-900 to-black\">\n      <Navigation />\n      <div className=\"container flex items-center justify-center min-h-screen px-4 mx-auto\">\n        <div className=\"grid w-full grid-cols-1 gap-8 mx-auto mt-32 sm:mt-0 sm:grid-cols-3 lg:gap-16\">\n          {socials.map((s) => (\n            <Card>\n              <a\n                href={s.href}\n                target=\"_blank\"\n                className=\"p-4 relative flex flex-col items-center gap-4 duration-700 group md:gap-8 md:py-24  lg:pb-48  md:p-16\"\n              >\n                <span\n                  className=\"absolute w-px h-2/3 bg-gradient-to-b from-zinc-500 via-zinc-500/50 to-transparent\"\n                  aria-hidden=\"true\"\n                />\n                <span className=\"relative z-10 flex items-center justify-center w-12 h-12 text-sm duration-1000 border rounded-full text-zinc-200 group-hover:text-white group-hover:bg-zinc-900 border-zinc-500 bg-zinc-900 group-hover:border-zinc-200 drop-shadow-orange\">\n                  {s.icon}\n                </span>{\" \"}\n                <div className=\"z-10 flex flex-col items-center\">\n                  <span className=\"lg:text-xl font-medium duration-150 xl:text-3xl text-zinc-200 group-hover:text-white font-display\">\n                    {s.handle}\n                  </span>\n                  <span className=\"mt-4 text-sm text-center duration-1000 text-zinc-400 group-hover:text-zinc-200\">\n                    {s.label}\n                  </span>\n                </div>\n              </a>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: `lucide lucide-${toKebabCase(iconName)}`,\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]) || []\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Github = createLucideIcon(\"Github\", [\n  [\n    \"path\",\n    {\n      d: \"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\",\n      key: \"tonef\"\n    }\n  ],\n  [\"path\", { d: \"M9 18c-4.51 2-5-2-7-2\", key: \"9comsn\" }]\n]);\n\nexport { Github as default };\n//# sourceMappingURL=github.js.map\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mail = createLucideIcon(\"Mail\", [\n  [\n    \"rect\",\n    { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }\n  ],\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\n]);\n\nexport { Mail as default };\n//# sourceMappingURL=mail.js.map\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Twitter = createLucideIcon(\"Twitter\", [\n  [\n    \"path\",\n    {\n      d: \"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\",\n      key: \"pff0z6\"\n    }\n  ]\n]);\n\nexport { Twitter as default };\n//# sourceMappingURL=twitter.js.map\n"],"names":["ArrowLeft","d","key","Navigation","ref","useRef","isIntersecting","setIntersecting","useState","useEffect","current","observer","IntersectionObserver","_ref","entry","observe","disconnect","React","className","href","isMotionValue","value","Boolean","getVelocity","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","velocityPerSecond","velocity","frameDuration","noop","any","Queue","order","scheduled","Set","process","has","remove","delete","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","collectMotionValues","undefined","MotionValue","init","options","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","v","render","prev","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","parseFloat","owner","onChange","subscription","on","eventName","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","jump","get","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","useConstant","useMotionValue","initial","useContext","setLatest","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","ease","Array","isArray","warning","invariant","mirrorEasing","easing","reverseEasing","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","clamp","number","test","parse","transform","alpha","scale","default","isColorString","type","testProp","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","info","matches","tokenised","replace","values","map","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","mixImmediate","origin","target","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","next","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","reject","time","newTime","newSpeed","pause","complete","sample","useSpring","config","activeSpringAnimation","stopAnimation","useInsertionEffect","JSON","stringify","useMotionTemplate","fragments","numFragments","combineValues","updateValue","scheduleUpdate","useCombineMotionValues","filter","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","animate","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","canHandoff","window","HandoffAppearAnimations","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","getValueAsType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","resolveVariantFromProps","currentValues","isKeyframesTarget","isCustomValue","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","initIntersectionObserver","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","resolveVariant","getCurrent","optimizedAppearDataAttribute","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","Card","mouseX","mouseY","maskImage","WebkitMaskImage","onMouseMove","currentTarget","clientX","clientY","div","socials","icon","Twitter","handle","Mail","Github","Example","s","defaultAttributes","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","createLucideIcon","iconName","iconNode","absoluteStrokeWidth","rest","displayName","rx"],"sourceRoot":""}