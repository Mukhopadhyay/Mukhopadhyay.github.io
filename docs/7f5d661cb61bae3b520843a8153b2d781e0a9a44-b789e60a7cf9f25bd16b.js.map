{"version":3,"file":"7f5d661cb61bae3b520843a8153b2d781e0a9a44-b789e60a7cf9f25bd16b.js","mappings":"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","sources":["webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/use-motion-template.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://Pranesh M's Portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://Pranesh M's Portfolio/./src/components/card.tsx","webpack://Pranesh M's Portfolio/./node_modules/lucide-react/dist/esm/icons/arrow-left.js","webpack://Pranesh M's Portfolio/./src/components/nav.tsx","webpack://Pranesh M's Portfolio/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://Pranesh M's Portfolio/./node_modules/lucide-react/dist/esm/createLucideIcon.js"],"sourcesContent":["const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/js/index.mjs';\nimport { millisecondsToSeconds } from '../utils/time-conversion.mjs';\nimport { frameData } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            /**\n             * If we're between frames, resync the animation to the frameloop.\n             */\n            if (!frameData.isProcessing) {\n                const delta = performance.now() - frameData.timestamp;\n                if (delta < 30) {\n                    activeSpringAnimation.current.time =\n                        millisecondsToSeconds(delta);\n                }\n            }\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","import { useCombineMotionValues } from './use-combine-values.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value) {\n                output += isMotionValue(value) ? value.get() : value;\n            }\n        }\n        return output;\n    }\n    return useCombineMotionValues(values.filter(isMotionValue), buildValue);\n}\n\nexport { useMotionTemplate };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","\"use client\";\n\nimport {\n  motion,\n  useMotionTemplate,\n  useMotionValue,\n  useSpring,\n} from \"framer-motion\";\n\nimport React, { MouseEventHandler, PropsWithChildren } from \"react\";\n\nexport const Card: React.FC<PropsWithChildren> = ({ children }) => {\n  const mouseX = useSpring(0, { stiffness: 500, damping: 100 });\n  const mouseY = useSpring(0, { stiffness: 500, damping: 100 });\n\n  function onMouseMove({ currentTarget, clientX, clientY }: any) {\n    const { left, top } = currentTarget.getBoundingClientRect();\n    mouseX.set(clientX - left);\n    mouseY.set(clientY - top);\n  }\n  const maskImage = useMotionTemplate`radial-gradient(240px at ${mouseX}px ${mouseY}px, white, transparent)`;\n  const style = { maskImage, WebkitMaskImage: maskImage };\n\n  return (\n    <div\n      onMouseMove={onMouseMove}\n      className=\"overflow-hidden relative duration-700 border rounded-xl hover:bg-zinc-800/10 group md:gap-8 hover:border-zinc-400/50 border-zinc-600 \"\n    >\n      <div className=\"pointer-events-none\">\n        <div className=\"absolute inset-0 z-0  transition duration-1000 [mask-image:linear-gradient(black,transparent)]\" />\n        <motion.div\n          className=\"absolute inset-0 z-10  bg-gradient-to-br opacity-100  via-zinc-100/10  transition duration-1000 group-hover:opacity-50 \"\n          style={style}\n        />\n        <motion.div\n          className=\"absolute inset-0 z-10 opacity-0 mix-blend-overlay transition duration-1000 group-hover:opacity-100\"\n          style={style}\n        />\n      </div>\n\n      {children}\n    </div>\n  );\n};\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n]);\n\nexport { ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","\"use client\";\nimport { ArrowLeft } from \"lucide-react\";\n// import Link from \"next/link\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport const Navigation: React.FC = () => {\n  const ref = useRef<HTMLElement>(null);\n  const [isIntersecting, setIntersecting] = useState(true);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const observer = new IntersectionObserver(([entry]) =>\n      setIntersecting(entry.isIntersecting)\n    );\n\n    observer.observe(ref.current);\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <header ref={ref}>\n      <div\n        className={`fixed inset-x-0 top-0 z-50 backdrop-blur  duration-200 border-b  ${\n          isIntersecting\n            ? \"bg-zinc-900/0 border-transparent\"\n            : \"bg-zinc-900/500  border-zinc-800 \"\n        }`}\n      >\n        <div className=\"container flex flex-row-reverse items-center justify-between p-6 mx-auto\">\n          <div className=\"flex justify-between gap-8\">\n            <a\n              href=\"/projects\"\n              className=\"duration-200 text-zinc-400 hover:text-zinc-100\"\n            >\n              Projects\n            </a>\n            <a\n              href=\"/datasets\"\n              className=\"duration-200 text-zinc-400 hover:text-zinc-100\"\n            >\n              Datasets\n            </a>\n            <a\n              href=\"/contacts\"\n              className=\"duration-200 text-zinc-400 hover:text-zinc-100\"\n            >\n              Contact\n            </a>\n          </div>\n\n          <a\n            href=\"/\"\n            className=\"duration-200 text-zinc-300 hover:text-zinc-100\"\n          >\n            <ArrowLeft className=\"w-6 h-6 \" />\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: `lucide lucide-${toKebabCase(iconName)}`,\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]) || []\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n"],"names":["isMotionValue","value","Boolean","getVelocity","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","velocityPerSecond","velocity","frameDuration","noop","any","Queue","order","scheduled","Set","process","has","remove","delete","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","collectMotionValues","current","undefined","MotionValue","init","options","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","v","render","prev","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","parseFloat","owner","onChange","subscription","on","eventName","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","jump","get","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","useConstant","ref","useRef","useMotionValue","initial","useContext","setLatest","useState","useEffect","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","ease","Array","isArray","warning","invariant","mirrorEasing","easing","reverseEasing","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","clamp","number","test","parse","transform","alpha","scale","default","isColorString","type","testProp","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","info","matches","tokenised","replace","values","map","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","mixImmediate","origin","target","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","next","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","reject","time","newTime","newSpeed","pause","complete","sample","useSpring","config","activeSpringAnimation","stopAnimation","useInsertionEffect","JSON","stringify","useMotionTemplate","fragments","numFragments","combineValues","updateValue","scheduleUpdate","useCombineMotionValues","filter","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","animate","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","canHandoff","window","HandoffAppearAnimations","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","getValueAsType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","resolveVariantFromProps","currentValues","isKeyframesTarget","isCustomValue","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","resolveVariant","getCurrent","optimizedAppearDataAttribute","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","Card","_ref","mouseX","mouseY","maskImage","WebkitMaskImage","React","onMouseMove","currentTarget","clientX","clientY","className","div","ArrowLeft","Navigation","setIntersecting","observer","disconnect","href","defaultAttributes","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","createLucideIcon","iconName","iconNode","absoluteStrokeWidth","rest","displayName"],"sourceRoot":""}